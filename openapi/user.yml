openapi: 3.0.3
info:
  title: User Information API
  description: API documentation for user information retrieval
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Development Server
paths:
  /auth:
    post:
      summary: User Authentication
      description: Obtain access token via username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 认证成功，返回令牌
          headers:
            X-Auth-Token:
              required: true
              schema:
                type: string
                description: Access Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed, incorrect username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      summary: List Users
      description: Get a list of all users
      responses:
        '200':
          description: Successfully retrieved user list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Get User Information
      description: Get user details by user ID
      parameters:
        - name: userId
          required: true
          in: path
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete User
      description: Delete specified user by user ID
      parameters:
        - name: userId
          in: path
          required: true
          description: 用户ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully, no content returned
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Invalid user ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          description: Username
        password:
          type: string
          description: Password
      required:
        - username
        - password
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique user identifier
        username:
          type: string
          description: 用户名
        age:
          type: integer
          description: User age
      required:
        - id
        - username
        - age
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
      required:
        - code
        - message